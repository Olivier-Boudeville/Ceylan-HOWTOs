.. _Top:


.. title:: Ceylan-HOWTOs: About GNU/Linux

------------------------------------
Using the GNU/Linux Operating System
------------------------------------


.. role:: raw-html(raw)
   :format: html

.. role:: raw-latex(raw)
   :format: latex


:raw-html:`<a name="howtos_top"></a>`

:raw-html:`<div class="banner"><p><em>Ceylan HOWTOs</em> <a href="http://howtos.esperide.org">browse latest</a> <a href="Ceylan-HOWTOs-english.pdf">get PDF</a> <a href="#howtos_top">go to top</a> <a href="#howtos_toc">go to toc</a> <a href="#howtos_bottom">go to bottom</a> <a href="Ceylan-HOWTOs-overview-english.html">go to HOWTOs</a> <a href="mailto:about(dash)ceylan-howtos(at)esperide(dot)com?subject=[Ceylan-HOWTOs]%20Remark%20about%20GNU/Linux">email us</a></p></div>`


:raw-html:`<center><img src="howtos-title.png" id="responsive-image-ultrasmall"></img>`


:Organisation: Copyright (C) 2021-GENERATION_YEAR_TAG Olivier Boudeville
:Contact: about (dash) howtos (at) esperide (dot) com
:Creation date: Sunday, December 19, 2021
:Lastly updated: GENERATION_DATE_TAG


:raw-html:`<a name="howtos_toc"></a>`

.. _`table of contents`:


.. contents:: **Table of Contents**
  :local:
  :depth: 2


:raw-html:`</center>`



Overview
========

GNU/Linux is our operating system of choice, for many reasons: it is in free software, it is efficient, trustable, reliable and controllable, its mode of operation does not change much over time so any time invested on it is well spent.

Over the years we tried many distributions, including Ubuntu, Debian, Gentoo, Mint.

Our personal all-time favorite is clearly `Arch Linux <https://en.wikipedia.org/wiki/Arch_Linux>`_, because it leaves much control to its end user (not attempting to hide details that have to be mastered anyway), it is a "clean" one, driven by a skilled and knowledgeable community, and also because it is a rolling distribution: it updates constantly its packages *without needing to regularly upgrade the whole system*, which would jeopardise it in the same movement (global system updates rarely complete successfully and tend to be postponed because of the many problems they trigger; we found preferable to deal with issues incrementally on a live system - rather than on one that may fail to reboot properly).

It ends up with a very stable, hassle-free distribution, with cutting-edge packages and higher uptimes (several months without needing to reboot), which is desirable for server-like usages.



Software Update
===============

The setup that we use is to perform **automatic nightly updates**. For that we use our `update-distro.sh <https://github.com/Olivier-Boudeville/Ceylan-Hull/blob/master/update-distro.sh>`_ script, run through root's crontab as:

.. code:: bash

 $ crontab -l
 # Each day at 5:17 AM, update the distro:
 17  05   *   *  * /usr/local/bin/update-distro.sh -q

As a result, all packages, libraries, executables, etc. are transparently updated, for the best.

However, for a proper management of modules [#]_, the kernel-related packages shall be special-cased; otherwise after the first kernel update no more modules can be loaded (they will expect to link to that latest installed kernel version, not to the older one being running).

.. [#] We tried to rely on `DKMS <https://wiki.archlinux.org/title/Dynamic_Kernel_Module_Support>`_ for that, but had still issues with some graphic-related modules, so we preferred managing updates by ourselves.


A first line of defense is to force the loading of the modules known to be of interest directly at boot-time, so that they can be for sure loaded and linked to the right kernel.

This may be done by populating ``/etc/modules-load.d/`` with as many files listing the modules to auto-load, like in::

 ::::::::::::::
 /etc/modules-load.d/for-3g-keys.conf
 ::::::::::::::
 option
 usb_wwan

 ::::::::::::::
 /etc/modules-load.d/for-all-usb-keys.conf
 ::::::::::::::
 # To be able to mount all kinds of USB keys:
 vfat
 uas
 dm_crypt

 ::::::::::::::
 /etc/modules-load.d/for-mobile-file-transfer.conf
 ::::::::::::::
 # To be able to transfer files between this hosts and mobile phones by MTP:
 nls_utf8
 isofs
 sr_mod
 cdrom
 # Maybe also: agpgart ahci wdat_wdt wmi_bmof xts

 ::::::::::::::
 /etc/modules-load.d/for-tty-serial-on-usb.conf
 ::::::::::::::
 # To be able to connect tty-like interfaces through a USB port:
 ftdi_sio
 usbserial

 ::::::::::::::
 /etc/modules-load.d/for-usb-tethering.conf
 ::::::::::::::
 # To enable an Internet access thanks to a smartphone via USB:
 usbnet
 # Implies:
 #rndis_host
 #cdc_ether

 ::::::::::::::
 /etc/modules-load.d/for-vlan-support.conf
 ::::::::::::::
 # To be able to manage VLANs:
 8021q


This is not sufficient though (ex: one cannot anticipate all modules needed after a while); disabling the *automatic* updates of kernels is also key to reduce issues; this can be done by specifying in ``/etc/pacman.conf``:

.. code:: bash

 IgnorePkg = linux linux-headers

LTS (*Long Term Support*) kernels are intentionally *not* listed here, as we prefer having them regularly updated in order to minimise the risk that the base and LTS kernels belong to too close versions (as then a problem in terms of hardware support is more likely to arise at the same time with both).

At least users of NVidia graphic cards may also list there their drivers, as apparently an hardware acceleration supported at boot may be lost after some time, presumably because of an update of its drivers (knowing that the update of the kernel itself was already disabled in that case) - so, if appropriate, better be safe than sorry:

.. code:: bash

 IgnorePkg = linux linux-headers nvidia nvidia-utils

See also our section about `operating system support for 3D <ThreeDimensional.html#os-support>`_.

Updating all packages but kernel-related ones is fine, but of course the latters shall still be also updated appropriately. The best moment for that is just prior to rebooting (knowing that your Linux box never crashes, isn't it?), so for that we use (as root) our `shutdown-local-host.sh <https://github.com/Olivier-Boudeville/Ceylan-Hull/blob/master/shutdown-local-host.sh>`_ script, like in:

.. code:: bash

 $ shutdown-local-host.sh --reboot

The kernel packages, and possibly driver-related ones, will then only be properly updated before the host is rebooted.



Package Management
==================


Configuration
-------------

.. _`enabling multilib`:

One may enable the `multilib <https://wiki.archlinux.org/title/Official_repositories#multilib>`_ repository, which is useful to run 32-bit software on 64-bit hardware. This is useful for example if needing ``wine``, knowing that its build from the AUR may fail.

To enable multilib, uncomment in ``/etc/pacman.conf``:

.. code:: bash

 [multilib]
 Include = /etc/pacman.d/mirrorlist

then upgrade your system with ``pacman -Syu``.



Package-related Commands
------------------------

- to get information about a package (installed or not): ``pacman -Si MY_PACKAGE``
- to list all packages explicitly installed and not required as dependencies: ``pacman -Qet``
- to determine which package installed a specified file:

  - on Arch: ``pkgfile SOME_FILE``; ``pkgfile`` itself must have been installed beforehand, with ``pacman -S pkgfile``, and be updated, with ``pkgfile --update`` (still as root)
  - on Debian: ``apt-file search SOME_FILE`` after a similar initial install thanks to: ``sudo apt-get install apt-file && sudo apt-file update``
  - for many distros, one may rely on the `command-not-found website <https://command-not-found.com/>`_


See `this page <https://wiki.archlinux.org/title/Pacman/Tips_and_tricks>`_ for many more Arch-related commands.



Interesting Packages
--------------------

They might be lesser known:

- ``cpulimit``: the way of limiting CPU usage of a given process, for example to avoid overheat (``nice`` just defines respective process priorities)
- ``inotify-tools``: to be able to monitor filesystem events (ex: with ``inotifywait``) from scripts
- ``jq``: for command-line JSON processing (ex: ``jq . myfile.json`` to display it properly on a terminal)
- ``mathjax``: to generate LaTeX-like images for the web
- ``most``: a replacement for ``more``
- ``pdftk``: to transform PDF files
- ``pkgfile``: to retrieve file information about packages



.. _`core dumps`:

Post-Mortem Investigations
==========================

Sometimes a UNIX process crashes and, typically if one developed it, one wants to investigate the issue, based on a core dump produced by the operating system.

This `Arch Linux article <https://wiki.archlinux.org/title/Core_dump>`_ will give all relevant details.

In short, ``coredumpctl list`` will list all known core dumps from oldest to most recent, such as in:

.. code:: bash

 $ coredumpctl list
 TIME                        PID   UID  GID SIG     COREFILE EXE                SIZE
 [...]
 Tue 2021-12-21 20:53:02 CET 73873 1007 988 SIGSEGV present  [...]/bin/beam.smp 14.6M


The last core dump produced may be studied directly, thanks to ``coredumpctl debug``, relying on ``gdb`` to fetch much lower-level information:

.. code:: bash

 $ coredumpctl debug
		   PID: 73873 (beam.smp)
		   UID: 1007 (xxx)
		   GID: 988 (users)
		Signal: 11 (SEGV)
	 Timestamp: Tue 2021-12-21 20:53:01 CET (38min ago)
  Command Line: /home/xxx/Software/Erlang/Erlang-24.2/lib/erlang/erts-12.2/bin/beam.smp -W w -K true -A 128 [...]
	Executable: /home/xxx/Software/Erlang/Erlang-24.2/lib/erlang/erts-12.2/bin/beam.smp
 Control Group: /user.slice/user-1007.slice/session-2.scope
		  Unit: session-2.scope
		 Slice: user-1007.slice
	   Session: 2
	 Owner UID: 1007 (xxx)
	   Boot ID: f8abe9473f7e4fea8ba24944e35ce7d9
	Machine ID: c9413a71e7b4498f831e2df7a08e5f33
	  Hostname: xxx
	   Storage: /var/lib/systemd/coredump/core.beam\x2esmp.1007.f8abe9473f7e4fea8ba24944e35ce7d9.73873.1640116381000000.zst (present)
	 Disk Size: 14.6M
	   Message: Process 73873 (beam.smp) of user 1007 dumped core.

				Found module /home/xxx/Software/Erlang/Erlang-24.2/lib/erlang/erts-12.2/bin/beam.smp with build-id: 8cfbf76728dd7399444638f1ba124471181840e7
				Found module /home/xxx/Software/Erlang/Erlang-24.2/lib/erlang/lib/wx-2.1.1/priv/erl_gl.so with build-id: 0b96532e586839d3da9afd6e5f23aa76346a0e45
 [...]
	Stack trace of thread 74039:
	#0  0x00007f6e5461a74b __memmove_avx_unaligned_erms (libc.so.6 + 0x16374b)
	#1  0x00007f6d8a204428 n/a (iris_dri.so + 0xd12428)
	#2  0x00007f6d89733207 n/a (iris_dri.so + 0x241207)
	#3  0x00007f6d89733c97 n/a (iris_dri.so + 0x241c97)
	#4  0x00007f6d898d8b0d n/a (iris_dri.so + 0x3e6b0d)
	#5  0x00007f6d898d8bf2 n/a (iris_dri.so + 0x3e6bf2)
	#6  0x00007f6d8b2f241c n/a (/home/xxx/Software/Erlang/Erlang-24.2/lib/erlang/lib/wx-2.1.1/priv/erl_gl.so + 0x5b41c)
 [New LWP 74039]
 [New LWP 73873]
 [...]
 Core was generated by `/home/xxx/Software/Erlang/Erlang-24.2/lib/erlang/erts-12.2/bin/beam.smp -'.
 Program terminated with signal SIGSEGV, Segmentation fault.
 #0  0x00007f6e5461a74b in __memmove_avx_unaligned_erms () from /usr/lib/libc.so.6
 [Current thread is 1 (Thread 0x7f6d900aa640 (LWP 74039))]


Then:

.. code::

 (gdb) bt
 [...]
 #0  0x00007f6e5461a74b in __memmove_avx_unaligned_erms () at /usr/lib/libc.so.6
 #1  0x00007f6d8a204428 in  () at /usr/lib/dri/iris_dri.so
 #2  0x00007f6d89733207 in  () at /usr/lib/dri/iris_dri.so
 #3  0x00007f6d89733c97 in  () at /usr/lib/dri/iris_dri.so
 #4  0x00007f6d898d8b0d in  () at /usr/lib/dri/iris_dri.so
 #5  0x00007f6d898d8bf2 in  () at /usr/lib/dri/iris_dri.so
 #6  0x00007f6d8b2f241c in ecb_glTexImage2D(ErlNifEnv*, ErlNifPid*, ERL_NIF_TERM*) (env=0x5642f62bdea0, self=0x5642f665e148, argv=0x5642f665e168) at gen/gl_nif.cpp:2844
 [...]
 #29 0x00007f6d92967188 in wxe_main_loop(void*) (_unused=<optimized out>) at wxe_main.cpp:138

(this example was an Erlang wx/OpenGL-oriented crash)

From there, `standard gdb-fu <https://sourceware.org/gdb/current/onlinedocs/gdb/>`_ shall be sufficient to give much insight. Once done, use ``q`` to quit.



Quick Topics
============


Installing Wine
---------------

Install it, once `enabling multilib`_ has been done, with: ``pacman -S wine``.

When run, this may lead ``wine-mono`` to be auto-installed.

The pseudo-Windows filesystem is then located mostly in ``~/.wine/drive_c``.



Invalid PGP Signatures in Packages
----------------------------------

This happens regularly, symptom being: ``File /var/cache/pacman/pkg/xxx.pkg.tar.zst is corrupted (invalid or corrupted package (PGP signature))``.

Solution: ``pacman -S archlinux-keyring`` is at least often enough. Otherwise ``pacman-key --populate archlinux``, or changing mirror might help.



Adding a Locale
---------------

On some hosts, issues in terms of a lacking locales may be reported, like in the following::

 bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8)

This can be fixed by uncommenting the corresponding locale (``en_US.UTF-8`` here) in ``/etc/locale.gen``, and then regenerating the system locales by running (as root) ``locale-gen``:

.. code:: bash

 $ locale-gen
 Generating locales (this might take a while)...
  en_US.UTF-8... done
  fr_FR.UTF-8... done
  fr_FR.ISO-8859-15@euro... done
 Generation complete.



Shortcuts
---------

Listing here the main keyboard shortcuts of interest for a few base tools.


For ``less``
____________

Mix of ``vi`` / ``more`` conventions, in order to:

- **forward-search** for the N-th line containing the pattern (N defaults to 1): ``/pattern``; use ``?/pattern`` to **backward-search**
- **repeat previous search**: ``n``:
- **invoke an editor** on the current file being viewed: ``v``
- **go to next file**: ``:n``; for the **previous** one: ``:p``
- **help**: ``h``
- **quit**: ``q``


For ``mplayer``
_______________

- **pause/unpause** the current playback: ``<space>``
- **decrease the volume**: ``/``; to **increase** it: ``*``
- **go backward/forward** in the current playback: ``left`` and ``right arrow`` keys
- **jump to next playback**: ``<Enter>`` or ``<Escape>``
- **stop** all playbacks: ``<CTRL-C>``


See Also
========

One may refer to our other mini-HOWTO regarding:

- `Network Management <Networking.html>`_
- `Cybersecurity <Cybersecurity.html>`_

The Ceylan-Hull section `system-related section <https://hull.esperide.org/#system-related>`_ might also be of interest.
