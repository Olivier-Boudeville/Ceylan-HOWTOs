.. _Top:


.. title:: Ceylan-HOWTOs: About GNU/Linux

-----------------------------
Online Interactive Multimedia
-----------------------------


.. role:: raw-html(raw)
   :format: html

.. role:: raw-latex(raw)
   :format: latex


:raw-html:`<a name="howtos_top"></a>`

:raw-html:`<div class="banner"><p><em>Ceylan HOWTOs</em> <a href="http://howtos.esperide.org">browse latest</a> <a href="Ceylan-HOWTOs-english.pdf">get PDF</a> <a href="#howtos_top">go to top</a> <a href="#howtos_toc">go to toc</a> <a href="#howtos_bottom">go to bottom</a> <a href="Ceylan-HOWTOs-overview-english.html">go to HOWTOs</a> <a href="mailto:about(dash)ceylan-howtos(at)esperide(dot)com?subject=[Ceylan-HOWTOs]%20Remark%20about%20Online%20Interactive%20Multimedia">email us</a></p></div>`


:raw-html:`<center><img src="howtos-title.png" id="responsive-image-ultrasmall"></img>`


:Organisation: Copyright (C) 2022-GENERATION_YEAR_TAG Olivier Boudeville
:Contact: about (dash) howtos (at) esperide (dot) com
:Creation date: Sunday, January 16, 2022
:Lastly updated: GENERATION_DATE_TAG


:raw-html:`<a name="howtos_toc"></a>`

.. _`table of contents`:


.. contents:: **Table of Contents**
  :local:
  :depth: 2


:raw-html:`</center>`



Overview
========

Here, online interactive multimedia could be seen as an euphemism for networked video games, yet the topic may be a bit larger, including cases where some kind of online, persistent, multi-user virtual world has to be simulated, for example `MMORPGs <https://en.wikipedia.org/wiki/Massively_multiplayer_online_role-playing_game>`_ or any sorts of `metaverse <https://en.wikipedia.org/wiki/Metaverse>`_.

As for the topic of graphical 2D/3D rendering, it is specifically addressed in `this section <ThreeDimensional.html>`_.



Networking Subsystem
====================

Various architectures can be considered for networked applications, from a totally decentralised peer-to-peer one, to a strict client/server one, possibly based on an authoritative server (performing most of the world evaluation by itself, rather delegating some of this processing to clients).

Notably when an application is intensively interactive (e.g. a real-time strategy game, as opposed as a turn-based one), compensating for the lag and jitter induced by the network is a difficult technical challenge.

Dedicated libraries exist for that, either commercial (e.g.

https://erlangforums.com/t/erlang-shall-power-the-metaverse/938/6


:raw-html:`<a name="howtos_bottom"></a>`
